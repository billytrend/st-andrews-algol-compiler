{
  "grammar": "<program> ::=\t<sequence>?;<sequence> ::=\t<declaration>[<sequence>]\t|<clause>[';'<sequence>];<declaration> ::=\t<let_decl>\t|<structure_decl>\t|<proc_decl>\t|<forward>;<let_decl> ::=\tlet <identifier><init_op><clause>;<init_op> ::=\t=\t|:=;<structure_decl> ::=\tstructure<identifier>[([<field_list>])];<field_list> ::=\t<type1><identifier_list>[';'<field_list>];<proc_decl> ::=\tprocedure<identifier>[([<parameter_list>] [<arrow><type_id>])]';' <clause>;<parameter_list> ::=\t<parameter>[';'<parameter_list>];<parameter> ::=\t<type1><identifier_list>\t|<structure_decl>\t|<proc_type><identifier_list>;<proc_type> ::=\t([<ptype_list>][<arrow><type_id>]);<ptype_list> ::=\t<type1>[,<ptype_list>]\t|<proc_type>[,<ptype_list>]\t|<s_decl>[,<ptype_list>];<s_decl> ::=\tstructure(<type1>[,<type1>]*);<forward> ::=\tforward<identifier><proc_type>;<type1> ::=\t[c]<type_id>;<type_id> ::=\tint \t|real \t|bool \t|string \t|pixel \t|pic \t|pntr \t|file \t|<star><type1> \t|#pixel \t|#cpixel;<identifier_list> ::=\t<identifier>[,<identifier_list>];<clause> ::=\tif<clause>do<clause>\t|if<clause>then<clause>else<clause>\t|repeat<clause>while<clause>[do<clause>]\t|while<clause>do<clause>\t|for<identifier>=<clause>to<clause>[by<clause>]do<clause>\t|case<clause>of<case_list>default :<clause>\t|<name>:=<clause>\t|<write_clause>\t|<raster>\t|abort\t|<expression>;<case_list> ::=\t<clause_list>:<clause>';'[<case_list>];<write_clause> ::=\twrite<write_list>\t|output <clause>,<write_list>\t|out.byte<clause>,<clause>,<clause>\t|out.16<clause>,<clause>,<clause>\t|out.32<clause>,<clause>;<write_list> ::=\t<clause>[:<clause>][,<write_list>];<raster> ::=\t<raster_op><clause>onto<clause>;<raster_op> ::=\tror\t|rand\t|xor\t|copy\t|nand\t|nor\t|not\t|xnor;<clause_list> ::=\t<clause>[,<clause_list>];<expression> ::=\t<exp1>[or<exp1>]*;<exp1> ::=\t<exp2>[and<exp2>]*;<exp2> ::=\t[~]<exp3>[<rel_op><exp3>];<exp3> ::=\t<exp4>[<add_op><exp4>]*;<exp4> ::=\t<exp5>[<mult_op><exp5>]*;<exp5> ::=\t[<add_op>]<exp6>;<exp6> ::=\t<standard_exp>\t|<literal>\t|<value_constructor>\t|(<clause>)\t|begin[<sequence>]end\t|{[<sequence>]}\t|<expression>(<clause><bar><clause>)\t|<expression>(<dereference>)\t|<application>\t|<structure_creation>\t|<name>\t|<bounds_op>(<clause>);<dereference> ::=\t<clause_list>;<application> ::=\t<identifier>[([<clause_list>])];<structure_creation> ::=\t<identifier>[([<clause_list>])];<name> ::=\t<identifier>\t|<expression>(<clause_list>)[(<clause_list>)]*;<bounds_op> ::=\tupb\t|lwb;<value_constructor> ::=\t<vector_constr>\t|<image_constr>\t|<subimage_constr>\t|<picture_constr>;<vector_constr> ::=\tvector<range>of<clause>\t|@<clause>of<type1><lsb><clause>[,<clause>]*<rsb>;<range> ::=\t<clause>::<clause>[,<range>];<image_constr> ::=\timage<clause>by<clause>of<clause>;<subimage_constr> ::=\tlimit<clause>[to<clause>by<clause>][at<clause>,<clause>];<picture_constr> ::=\tshift<clause>by<clause>,<clause>\t|scale<clause>by<clause>,<clause>\t|rotate<clause>by<clause>\t|colour<clause>in<clause>\t|text<clause>from<clause>,<clause>to<clause>,<clause>\t|<lsb><clause>,<clause><rsb>;<literal> ::=\t<integer_literal>\t|<real_literal>\t|<boolean_literal>\t|<string_literal>\t|<pixel_literal>\t|<pntr_literal>\t|<file_literal>;<integer_literal> ::=\t[<add_op>]<int_literal>;<int_literal> ::=\t<digit>[<digit>]*;<real_literal> ::=\t<integer _literal>.[<int _literal>][e<integer_literal>];<boolean_literal> ::=\ttrue\t|false;<string_literal> ::=\t<double_quote>[<char>]*<double_quote>;<char> ::= <special_character>;<special_character> ::=\t<single_quote><special_follow>;<special_follow> ::=\tn\t|p\t|o\t|t\t|b\t|<single_quote>\t|<double_quote>;<pixel_literal> ::=\ton[&<pixel_literal>]\t|off[&<pixel_literal>];<pntr_literal> ::=\tnil;<file_literal> ::=\tnullfile;<lab> ::=\t'<';<rab> ::=\t'>';<lsb> ::=\t'[';<rsb> ::=\t']';<star> ::=\t'*';<bar> ::=\t'|';<add_op> ::=\t+\t|-;<mult_op>  ::=\t<int_mult_op>\t|<real_mult_op>\t|++\t|<pic_op>\t|<pixel_op>;<int_mult_op> ::=\t<star>\t|div\t|rem;<real_mult_op> ::=\t<star>\t|/;<pic_op> ::=\t^\t|&;<pixel_op> ::=\t&;<rel_op> ::=\t<eq_op>\t|<compar_op>\t|<type_op>;<eq_op> ::=\t=\t|≠;<compar_op> ::=\t'<'\t|≤\t|'>'\t|≥;<type_op> ::=\tis\t|isnt;<arrow> ::=\t-'>';<double_quote> ::=\t\";<single_quote> ::=\t''';<identifier> ::=\t<id>\t|<standard_id>;<id> ::=\t<letter>[<id_follow>];<id_follow> ::=\t<letter>[<id_follow>]\t|<digit>[<id_follow>]\t|.[<id_follow>]; <letter> ::=\ta\t|b\t|c\t|d\t|e\t|f\t|g\t|h\t|i\t|j\t|k\t|l\t|m\t|n\t|o\t|p\t|q\t|r\t|s\t|t\t|u\t|v\t|w\t|x\t|y\t|z\t|A\t|B\t|C\t|D\t|E\t|F\t|G\t|H\t|I\t|J\t|K\t|L\t|M\t|N\t|O\t|P\t|Q\t|R\t|S\t|T\t|U\t|V\t|W\t|X\t|Y\t|Z;<digit> ::=\t0\t|1\t|2\t|3\t|4\t|5\t|6\t|7\t|8\t|9;<standard_exp> ::=\t<standard_name>[(<clause>)];<standard_name> ::=\tupb\t|lwb\t|eof\t|read.a.line\t|read\t|readi\t|readr\t|readb\t|peek\t|reads\t|read.name\t|read.byte\t|read.16\t|read.32;<standard_id> ::=\tr.w\t|i.w\t|s.w\t|s.o\t|s.i\t|maxint\t|maxreal\t|epsilon\t|pi\t|cursor\t|screen;"
}